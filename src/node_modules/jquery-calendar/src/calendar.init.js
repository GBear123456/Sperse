// calendar.init.js

(function (jQCalendar, $, undefined) {
    jQCalendar.init = function (obj, embeded, options) {
        var calendarObj = $(obj),
            wrapperId = calendarObj.attr('id'),
            inputControlId = wrapperId + 'inputControl',
            selectedDateRangeId = wrapperId + 'selectedDateRange';

        if (!embeded)
          calendarObj.html('<div class="calendar-wrapper">' +
             '	<div class="header">' +
             '		<i class="fa fa-calendar calendar-icon" aria-hidden="true"></i><span>Date Range</span>' +
             '	</div>' +
             '	<div id="' + inputControlId + '" class="selector">' +
             '	    <div id="' + wrapperId + 'Initial" class="dateInputInit">' +   
             '		    <span>Select a date range</span>' +
             '           <i class="fa fa-chevron-right selector-icon" aria-hidden="true"></i>' +
             '	    </div>' +
             '	    <div id="' + wrapperId + 'Selected" class="dateInputSelected">' +   
             '           <button id="' + wrapperId + 'PrevBtn" class="btn btn-sm prevBtn">' +
             '               <i class="fa fa-caret-left" aria-hidden="true"></i> Back</button>' +
             '		    <label id="' + selectedDateRangeId + '" class="selectedDateText"></label>' +
             '           <button id="' + wrapperId + 'NextBtn" class="btn btn-sm nextBtn">' +
             '               Next <i class="fa fa-caret-right" aria-hidden="true"></i></button>' +
             '	    </div>' +
             '	</div>' +
             '</div>'
             );

        calendarObj.dateRangePicker(
            Object.assign({
                alwaysOpen: embeded,
                container: embeded ? calendarObj: 'body',
                singleMonth: true,
                format: 'MMM DD, YYYY',
                separator: ' - ',
                startDate: moment(new Date()).add(-10, 'years').toDate(), // this is a specific first date
                allowFutureDates: false,
                allowCurrentDate: true,
                customTopBar: '<div class="topBarDateWrapper"><i class="fa fa-calendar-o" aria-hidden="true"></i><span class="topBarStartDate"></span>' +
                '<i class="fa fa-arrow-right arrowToDate" aria-hidden="true"></i>' +
                '<i class="fa fa-calendar-o" aria-hidden="true"></i><span class="topBarEndDate"></span></div>',
                
                getValue: function () {
                    return ($(this).find("#" + selectedDateRangeId).html());
                },
                setValue: function (s) {
                    $(this).find("#" + selectedDateRangeId).html(s);
                    $(this).find("#" + wrapperId + "Initial").hide();
                    $(this).find("#" + wrapperId + "Selected").show();
                }
                
            }, options)).bind('datepicker-first-date-selected', function (event, obj) {
                /* This event will be triggered when first date is selected */
                // obj : {
                // 		date1: (Date object of the earlier date)
                // }
            })
            .bind('datepicker-change', function (event, obj) {
                /* This event will be triggered when second date is selected */
                // ojb : {
                // 		date1: (Date object of the earlier date),
                // 		date2: (Date object of the later date),
                //	 	value: "2013-06-05 to 2013-06-07"
                // }
                $(".topBarStartDate").text(moment(new Date(obj.date1)).format("MMM DD, YYYY"));
                $(".topBarEndDate").text(moment(new Date(obj.date2)).format("MMM DD, YYYY"));
                $(".topBarDateWrapper").show();
            });

        // Disable "All Available Dates" button when no first date is set.
        if (!calendarObj.data('dateRangePicker').getFirstDate()) {
            $('.date-picker-wrapper .allAvailableDates').attr('title', 'Start date is not set.');
            $('.date-picker-wrapper .allAvailableDates').attr('disabled', 'disabled');
        }

        // Disable "Today" button when current date selection is not allowed.
        if (calendarObj.data('dateRangePicker').getAllowCurrentDate() === false) {
            $('.date-picker-wrapper .today').attr('title', 'Not allowed');
            $('.date-picker-wrapper .today').attr('disabled', 'disabled');
        }

        $('.date-picker-wrapper .yesterday').on('click', function (e) {
            e.stopPropagation();
            var startDate = calendarObj.data('dateRangePicker').getFirstDate();
            if (startDate && moment(startDate).isSameOrAfter(moment()))
                return false;
            startDate = moment().subtract({ Days: 1 }).toDate();
            var endDate = moment().subtract({ Days: 1 }).toDate();
            startDate.setTime(startDate);
            endDate.setTime(endDate);
            calendarObj.data('dateRangePicker').setDateRange(startDate, endDate);
            calendarObj.data('dateRangePicker').setRangeSelectedType({ Days: 1 });
        });

        $('.date-picker-wrapper .today').on('click', function (e) {
            e.stopPropagation();
            if (calendarObj.data('dateRangePicker').getAllowCurrentDate() === false)
                return false;
            var startDate = moment().toDate();
            var endDate = moment().toDate();
            startDate.setTime(startDate);
            endDate.setTime(endDate);
            calendarObj.data('dateRangePicker').setDateRange(startDate, endDate);
            calendarObj.data('dateRangePicker').setRangeSelectedType({ Days: 1 });
        });

        $('.date-picker-wrapper .lastSevenDays').on('click', function (e) {
            e.stopPropagation();
            calendarObj.data('dateRangePicker').setRangePreselectedFlag();
            var startDate = getValidStartDate(moment().subtract({ Days: 7 }).toDate());
            var endDate = moment().subtract({ Days: 1 }).toDate();
            startDate.setTime(startDate);
            endDate.setTime(endDate);
            calendarObj.data('dateRangePicker').setDateRange(startDate, endDate);
            calendarObj.data('dateRangePicker').setRangeSelectedType({ Days: 7 });
        });

        $('.date-picker-wrapper .lastThirtyDays').on('click', function (e) {
            e.stopPropagation();
            calendarObj.data('dateRangePicker').setRangePreselectedFlag();
            var startDate = getValidStartDate(moment().subtract({ Days: 30 }).toDate());
            var endDate = moment().subtract({ Days: 1 }).toDate();
            startDate.setTime(startDate);
            endDate.setTime(endDate);
            calendarObj.data('dateRangePicker').setDateRange(startDate, endDate);
            calendarObj.data('dateRangePicker').setRangeSelectedType({ Days: 30 });
        });

        $('.date-picker-wrapper .lastWeek').on('click', function (e) {
            e.stopPropagation();
            calendarObj.data('dateRangePicker').setRangePreselectedFlag();
            var startDate = getValidStartDate(moment().add({ weeks: -1 }).startOf('week').toDate());
            var endDate = moment().add({ weeks: -1 }).endOf('week').toDate();
            startDate.setTime(startDate);
            endDate.setTime(endDate);
            calendarObj.data('dateRangePicker').setDateRange(startDate, endDate);
            calendarObj.data('dateRangePicker').setRangeSelectedType({ Weeks: 1 });
        });

        $('.date-picker-wrapper .thisWeek').on('click', function (e) {
            e.stopPropagation();
            calendarObj.data('dateRangePicker').setRangePreselectedFlag();
            var startDate = getValidStartDate(moment().startOf('week').toDate());
            var endDate = getValidEndDate(options.allowFutureDates ? 
                moment().endOf('week').toDate(): moment().toDate());
            startDate.setTime(startDate);
            endDate.setTime(endDate);
            calendarObj.data('dateRangePicker').setDateRange(startDate, endDate);
            calendarObj.data('dateRangePicker').setRangeSelectedType({ Weeks: 1 });
        });

        $('.date-picker-wrapper .lastMonth').on('click', function (e) {
            e.stopPropagation();
            calendarObj.data('dateRangePicker').setRangePreselectedFlag();
            var startDate = getValidStartDate(moment().add({ month: -1 }).startOf('month').toDate());
            var endDate = moment().add({ month: -1 }).endOf('month').toDate();
            startDate.setTime(startDate);
            endDate.setTime(endDate);
            calendarObj.data('dateRangePicker').setDateRange(startDate, endDate);
            calendarObj.data('dateRangePicker').setRangeSelectedType({ Months: 1 });
        });

        $('.date-picker-wrapper .thisMonth').on('click', function (e) {
            e.stopPropagation();
            calendarObj.data('dateRangePicker').setRangePreselectedFlag();
            var startDate = getValidStartDate(moment().startOf('month').toDate());
            var endDate = getValidEndDate(options.allowFutureDates ? 
                moment().endOf('month').toDate(): moment().toDate());
            startDate.setTime(startDate);
            endDate.setTime(endDate);
            calendarObj.data('dateRangePicker').setDateRange(startDate, endDate);
            calendarObj.data('dateRangePicker').setRangeSelectedType({ Months: 1 });
        });

        $('.date-picker-wrapper .lastQuarter').on('click', function (e) {
            e.stopPropagation();
            calendarObj.data('dateRangePicker').setRangePreselectedFlag();
            var startDate = getValidStartDate(moment().add({ quarter: -1 }).startOf('quarter').toDate());
            var endDate = moment().add({ quarter: -1 }).endOf('quarter').toDate();
            startDate.setTime(startDate);
            endDate.setTime(endDate);
            calendarObj.data('dateRangePicker').setDateRange(startDate, endDate);
            calendarObj.data('dateRangePicker').setRangeSelectedType({ Quarters: 1 });
        });

        $('.date-picker-wrapper .thisQuarter').on('click', function (e) {
            e.stopPropagation();
            calendarObj.data('dateRangePicker').setRangePreselectedFlag();
            var startDate = getValidStartDate(moment().startOf('quarter').toDate());
            var endDate = getValidEndDate(options.allowFutureDates ? 
                moment().endOf('quarter').toDate(): moment().toDate());
            startDate.setTime(startDate);
            endDate.setTime(endDate);
            calendarObj.data('dateRangePicker').setDateRange(startDate, endDate);
            calendarObj.data('dateRangePicker').setRangeSelectedType({ Quarters: 1 });
        });

        $('.date-picker-wrapper .lastYear').on('click', function (e) {
            e.stopPropagation();
            var startDate = calendarObj.data('dateRangePicker').getFirstDate();
            if (startDate && moment(startDate).isAfter(moment().add({ year: -1 }).endOf('year').toDate()))
                return false;
            calendarObj.data('dateRangePicker').setRangePreselectedFlag();
            startDate = getValidStartDate(moment().add({ year: -1 }).startOf('year').toDate());
            var endDate = moment().add({ year: -1 }).endOf('year').toDate();
            startDate.setTime(startDate);
            endDate.setTime(endDate);
            calendarObj.data('dateRangePicker').setDateRange(startDate, endDate);
            calendarObj.data('dateRangePicker').setRangeSelectedType({ Years: 1 });
        });

        $('.date-picker-wrapper .thisYear').on('click', function (e) {
            e.stopPropagation();
            calendarObj.data('dateRangePicker').setRangePreselectedFlag();
            var startDate = getValidStartDate(moment().startOf('year').toDate());
            var endDate = getValidEndDate(options.allowFutureDates ? 
                moment().endOf('year').toDate(): moment().toDate());
            startDate.setTime(startDate);
            endDate.setTime(endDate);
            calendarObj.data('dateRangePicker').setDateRange(startDate, endDate);
            calendarObj.data('dateRangePicker').setRangeSelectedType({ Years: 1 });
        });

        $('.date-picker-wrapper .allAvailableDates').on('click', function (e) {
            e.stopPropagation();
            if (!calendarObj.data('dateRangePicker').getFirstDate()) {
                $(this).attr('disabled', 'disabled');
                return false;
            }
            calendarObj.data('dateRangePicker').setRangePreselectedFlag();
            var startDate = moment(calendarObj.data('dateRangePicker').getFirstDate()).toDate();
            var endDate = options.allowFutureDates ? moment(calendarObj.data('dateRangePicker').getEndDate()).toDate()
                : calendarObj.data('dateRangePicker').getAllowCurrentDate() === false ? moment().subtract({ Days: 1 }).toDate() : moment().toDate();
            startDate.setTime(startDate);
            endDate.setTime(endDate);
            calendarObj.data('dateRangePicker').setDateRange(startDate, endDate);
        });

        $('.calendar-wrapper .prevBtn').on('click', function (e) {
            e.stopPropagation();
            var datePicker = calendarObj.data('dateRangePicker');
            
            var dateDiff = datePicker.getRangeSelectedType();
            if (!dateDiff)
                dateDiff = { Days: 1 };

            var startDate = null;
            var endDate = null;
            if (dateDiff.Weeks) {
                startDate = getValidStartDate(moment(datePicker.getStartDate(), datePicker.getDateFormat()).subtract(dateDiff).startOf('week').toDate());
                endDate = moment(datePicker.getEndDate(), datePicker.getDateFormat()).subtract(dateDiff).endOf('week').toDate();
            }
            else if (dateDiff.Months) {
                startDate = getValidStartDate(moment(datePicker.getStartDate(), datePicker.getDateFormat()).subtract(dateDiff).startOf('month').toDate());
                endDate = moment(datePicker.getEndDate(), datePicker.getDateFormat()).subtract(dateDiff).endOf('month').toDate();
            }
            else if (dateDiff.Quarters) {
                startDate = getValidStartDate(moment(datePicker.getStartDate(), datePicker.getDateFormat()).subtract(dateDiff).startOf('quarter').toDate());
                endDate = moment(datePicker.getEndDate(), datePicker.getDateFormat()).subtract(dateDiff).endOf('quarter').toDate();
            }
            else if (dateDiff.Years) {
                startDate = getValidStartDate(moment(datePicker.getStartDate(), datePicker.getDateFormat()).subtract(dateDiff).startOf('year').toDate());
                endDate = moment(datePicker.getEndDate(), datePicker.getDateFormat()).subtract(dateDiff).endOf('year').toDate();
            }
            else {
                startDate = getValidStartDate(moment(datePicker.getStartDate(), datePicker.getDateFormat()).subtract(dateDiff).toDate());
                endDate = moment(datePicker.getEndDate(), datePicker.getDateFormat()).subtract(dateDiff).toDate();
            }
            
            startDate.setTime(startDate);
            endDate.setTime(endDate);
            datePicker.setDateRange(startDate, endDate);
        });

        $('.calendar-wrapper .nextBtn').on('click', function (e) {
            e.stopPropagation();
            var datePicker = calendarObj.data('dateRangePicker');

            // Checking if the EndDate is current date or yesterday (whichever is allowed) in which case no more "Next" dates are allowed for selection.
            if ((datePicker.getAllowFutureDates() === false && moment(datePicker.getEndDate(), datePicker.getDateFormat()).isSame(moment().format(datePicker.getDateFormat())))
                || (datePicker.getAllowCurrentDate() === false && moment(datePicker.getEndDate(), datePicker.getDateFormat()).isSame(moment().subtract({ Days: 1 }).format(datePicker.getDateFormat()))))
                return false;
            
            var dateDiff = datePicker.getRangeSelectedType();
            if (!dateDiff)
                dateDiff = { Days: 1 };

            var startDate = null;
            var endDate = null;
            if (dateDiff.Weeks) {
                startDate = getValidStartDate(moment(datePicker.getStartDate(), datePicker.getDateFormat()).add(dateDiff).startOf('week').toDate());
                endDate = getValidEndDate(moment(datePicker.getEndDate(), datePicker.getDateFormat()).add(dateDiff).endOf('week').toDate());
            }
            else if (dateDiff.Months) {
                startDate = getValidStartDate(moment(datePicker.getStartDate(), datePicker.getDateFormat()).add(dateDiff).startOf('month').toDate());
                endDate = getValidEndDate(moment(datePicker.getEndDate(), datePicker.getDateFormat()).add(dateDiff).endOf('month').toDate());
            }
            else if (dateDiff.Quarters) {
                startDate = getValidStartDate(moment(datePicker.getStartDate(), datePicker.getDateFormat()).add(dateDiff).startOf('quarter').toDate());
                endDate = getValidEndDate(moment(datePicker.getEndDate(), datePicker.getDateFormat()).add(dateDiff).endOf('quarter').toDate());
            }
            else if (dateDiff.Years) {
                startDate = getValidStartDate(moment(datePicker.getStartDate(), datePicker.getDateFormat()).add(dateDiff).startOf('year').toDate());
                endDate = getValidEndDate(moment(datePicker.getEndDate(), datePicker.getDateFormat()).add(dateDiff).endOf('year').toDate());
            }
            else {
                startDate = getValidStartDate(moment(datePicker.getStartDate(), datePicker.getDateFormat()).add(dateDiff).toDate());
                endDate = getValidEndDate(moment(datePicker.getEndDate(), datePicker.getDateFormat()).add(dateDiff).toDate());
            }

            startDate.setTime(startDate);
            endDate.setTime(endDate);
            datePicker.setDateRange(startDate, endDate);
        });

        function getValidStartDate(expectedStartDate) {
            var datePicker = calendarObj.data('dateRangePicker');
            var startDate = datePicker.getFirstDate();
            if (startDate && moment(expectedStartDate).isBefore(startDate)) {
                return moment(startDate).toDate();
            }
            else if (moment(expectedStartDate).isSameOrAfter(moment())) {
                if (datePicker.getAllowCurrentDate() === false)
                    return moment().subtract({ Days: 1 }).toDate();
                else if (datePicker.getAllowFutureDates() === false)
                    return endDate = moment().toDate();
            }
            return expectedStartDate;
        }

        function getValidEndDate(expectedEndDate) {
            var datePicker = calendarObj.data('dateRangePicker');
            if (moment(expectedEndDate).isSameOrAfter(moment())) {
                if (datePicker.getAllowCurrentDate() === false)
                    return moment().subtract({ Days: 1 }).toDate();
                else if (datePicker.getAllowFutureDates() === false)
                    return endDate = moment().toDate();
            }
            return expectedEndDate;
        }
        return calendarObj;
    };
}(window.jQCalendar = window.jQCalendar || {}, jQuery));